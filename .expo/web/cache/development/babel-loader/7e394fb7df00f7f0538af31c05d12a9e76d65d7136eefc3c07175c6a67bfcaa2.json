{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegistrationScreen from \"./screens/RegistrationScreen\";\nimport ActivityScreen from \"./screens/ActivityScreen\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { firebase } from \"./config\";\nimport 'expo-dev-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar Stack = createNativeStackNavigator();\nfunction App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    initializing = _useState2[0],\n    setInitializing = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) {\n    return null;\n  }\n  if (!user) {\n    return _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        options: {\n          contentStyle: {\n            backgroundColor: \"#F8F6F4\"\n          }\n        },\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        options: {\n          contentStyle: {\n            backgroundColor: \"#F8F6F4\"\n          }\n        },\n        name: \"Register\",\n        component: RegistrationScreen\n      })]\n    });\n  }\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      options: {\n        contentStyle: {\n          backgroundColor: \"#FFE0E4\"\n        }\n      },\n      name: \"Activity\",\n      component: ActivityScreen\n    })\n  });\n}\nexport default (function () {\n  return _jsx(NavigationContainer, {\n    children: _jsx(App, {})\n  });\n});","map":{"version":3,"names":["useState","useEffect","StyleSheet","Text","View","Button","Image","React","NavigationContainer","createNativeStackNavigator","LoginScreen","RegistrationScreen","ActivityScreen","WebBrowser","firebase","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","Stack","App","_useState","_useState2","_slicedToArray","initializing","setInitializing","_useState3","_useState4","user","setUser","onAuthStateChanged","subscriber","auth","Navigator","screenOptions","headerShown","children","Screen","options","contentStyle","backgroundColor","name","component"],"sources":["C:/Users/chen xiaowei/GoWhere5635/GoWhere5635/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\r\nimport React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegistrationScreen from './screens/RegistrationScreen';\r\nimport ActivityScreen from './screens/ActivityScreen';\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport { firebase } from './config';\r\nimport 'expo-dev-client';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber;\r\n  }, []);\r\n\r\n  if (initializing) {\r\n    return null;\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false\r\n        }}>\r\n        <Stack.Screen options={{ contentStyle:{backgroundColor:\"#F8F6F4\"} }} name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen options={{ contentStyle:{backgroundColor:\"#F8F6F4\"} }} name=\"Register\" component={RegistrationScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n    }\r\n\r\n    return (\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false\r\n        }}>\r\n        <Stack.Screen options={{ contentStyle:{backgroundColor:\"#FFE0E4\"} }} name=\"Activity\" component={ActivityScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  export default () => {\r\n    return (\r\n      <NavigationContainer>\r\n        <App />\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAE5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,SAASC,QAAQ;AACjB,OAAO,iBAAiB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzBL,UAAU,CAACM,wBAAwB,CAAC,CAAC;AAErC,IAAMC,KAAK,GAAGX,0BAA0B,CAAC,CAAC;AAE1C,SAASY,GAAGA,CAAA,EAAG;EACb,IAAAC,SAAA,GAAwCtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAwB3B,QAAQ,CAAC,IAAI,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpB,SAASG,kBAAkBA,CAACF,IAAI,EAAE;IAChCC,OAAO,CAACD,IAAI,CAAC;IACb,IAAIJ,YAAY,EAAEC,eAAe,CAAC,KAAK,CAAC;EAC1C;EAEAzB,SAAS,CAAC,YAAM;IACd,IAAM+B,UAAU,GAAGlB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAACF,kBAAkB,CAACA,kBAAkB,CAAC;IACzE,OAAOC,UAAU;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIP,YAAY,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,IAAI,CAACI,IAAI,EAAE;IACT,OACEX,KAAA,CAACE,KAAK,CAACc,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE;MACf,CAAE;MAAAC,QAAA,GACFrB,IAAA,CAACI,KAAK,CAACkB,MAAM;QAACC,OAAO,EAAE;UAAEC,YAAY,EAAC;YAACC,eAAe,EAAC;UAAS;QAAE,CAAE;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEjC;MAAY,CAAE,CAAC,EAC5GM,IAAA,CAACI,KAAK,CAACkB,MAAM;QAACC,OAAO,EAAE;UAAEC,YAAY,EAAC;YAACC,eAAe,EAAC;UAAS;QAAE,CAAE;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEhC;MAAmB,CAAE,CAAC;IAAA,CACvG,CAAC;EAEpB;EAEA,OACEK,IAAA,CAACI,KAAK,CAACc,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,EACFrB,IAAA,CAACI,KAAK,CAACkB,MAAM;MAACC,OAAO,EAAE;QAAEC,YAAY,EAAC;UAACC,eAAe,EAAC;QAAS;MAAE,CAAE;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAE/B;IAAe,CAAE;EAAC,CACnG,CAAC;AAEtB;AAEA,gBAAe,YAAM;EACnB,OACEI,IAAA,CAACR,mBAAmB;IAAA6B,QAAA,EAClBrB,IAAA,CAACK,GAAG,IAAE;EAAC,CACY,CAAC;AAE1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}