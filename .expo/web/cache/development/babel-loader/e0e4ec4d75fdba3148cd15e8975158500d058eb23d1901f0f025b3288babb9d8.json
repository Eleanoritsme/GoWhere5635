{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { firebase } from \"../config\";\nimport { useNavigation } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ActivityScreen = function ActivityScreen() {\n  var navigation = useNavigation();\n  var _useFonts = useFonts({\n      \"Inter-ExtraBold\": require(\"../assets/fonts/Inter-ExtraBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(View, {\n      style: styles.title,\n      children: _jsx(Text, {\n        style: styles.titleText,\n        children: \"What are you looking for?\"\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        style: styles.buttonInput,\n        children: _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Text, {\n            style: styles.inputText,\n            children: \"Study  \"\n          }), _jsx(Image, {\n            style: styles.inputImage,\n            source: require(\"../assets/images/misc/Study.png\")\n          })]\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        style: styles.buttonInput,\n        children: _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Image, {\n            style: styles.inputImage,\n            source: require(\"../assets/images/misc/Work.png\")\n          }), _jsx(Text, {\n            style: styles.inputText,\n            children: \"   Work\"\n          })]\n        })\n      })\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        style: styles.buttonInput,\n        children: _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Text, {\n            style: styles.inputText,\n            children: \"Eat        \"\n          }), _jsx(Image, {\n            style: styles.inputImage,\n            source: require(\"../assets/images/misc/Eat.png\")\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default ActivityScreen;\nvar styles = StyleSheet.create({\n  title: {\n    marginLeft: 20,\n    marginTop: 20,\n    marginBottom: 40\n  },\n  titleText: {\n    fontFamily: 'Inter-ExtraBold',\n    fontSize: 50\n  },\n  buttonContainer: {\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    marginBottom: 20\n  },\n  buttonInput: {\n    borderColor: '#212A3E',\n    borderWidth: 2.5,\n    borderRadius: 20,\n    paddingHorizontal: 50,\n    shadowColor: '#B3B3B3',\n    shadowOffset: {\n      height: 2,\n      width: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 1,\n    backgroundColor: '#FFCDD6'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 20\n  },\n  inputImage: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain'\n  },\n  inputText: {\n    fontFamily: 'Inter-ExtraBold',\n    fontSize: 36,\n    color: '#002B5B'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","firebase","useNavigation","SafeAreaView","useFonts","AppLoading","jsx","_jsx","jsxs","_jsxs","ActivityScreen","navigation","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","children","View","style","styles","title","Text","titleText","buttonContainer","onPress","buttonInput","inputContainer","inputText","Image","inputImage","source","StyleSheet","create","marginLeft","marginTop","marginBottom","fontFamily","fontSize","justifyContent","flexDirection","borderColor","borderWidth","borderRadius","paddingHorizontal","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","backgroundColor","alignItems","resizeMode","color"],"sources":["C:/Users/chen xiaowei/GoWhere5635/GoWhere5635/screens/ActivityScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, Image } from 'react-native'\r\nimport React from 'react'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport { firebase } from '../config'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\n\r\nimport { useFonts } from 'expo-font'\r\nimport AppLoading from 'expo-app-loading'\r\n\r\nconst ActivityScreen = () => {\r\n\r\n  const navigation = useNavigation()\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    \"Inter-ExtraBold\": require('../assets/fonts/Inter-ExtraBold.ttf')\r\n  });\r\n  \r\n  if (!fontsLoaded) {\r\n    return <AppLoading />\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View style={styles.title}>\r\n        <Text style={styles.titleText}>\r\n          What are you looking for?\r\n        </Text>\r\n      </View>\r\n\r\n      <View\r\n        style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => {}}\r\n          style={styles.buttonInput}>\r\n          <View style={styles.inputContainer}>\r\n          <Text style={styles.inputText}>Study  </Text>\r\n          <Image style={styles.inputImage}\r\n          source={require('../assets/images/misc/Study.png')}/>\r\n          </View>\r\n        </TouchableOpacity> \r\n        </View>\r\n\r\n        <View\r\n        style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => {}}\r\n          style={styles.buttonInput}>\r\n          <View style={styles.inputContainer}>\r\n          <Image style={styles.inputImage}\r\n          source={require('../assets/images/misc/Work.png')}/>\r\n          <Text style={styles.inputText}>   Work</Text>\r\n          </View>\r\n        </TouchableOpacity> \r\n        </View>\r\n\r\n        <View\r\n        style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => {}}\r\n          style={styles.buttonInput}>\r\n          <View style={styles.inputContainer}>\r\n          <Text style={styles.inputText}>Eat        </Text>\r\n          <Image style={styles.inputImage}\r\n          source={require('../assets/images/misc/Eat.png')}/>\r\n          </View>\r\n        </TouchableOpacity> \r\n        </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default ActivityScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  title:{\r\n    marginLeft:20,\r\n    marginTop:20,\r\n    marginBottom:40\r\n  },\r\n  titleText:{\r\n    fontFamily:'Inter-ExtraBold',\r\n    fontSize: 50,\r\n  },\r\n  buttonContainer:{\r\n    justifyContent:'space-around',\r\n    flexDirection:'row',\r\n    marginBottom:20,\r\n  },\r\n  buttonInput:{\r\n    borderColor:'#212A3E',\r\n    borderWidth:2.5,\r\n    borderRadius:20,\r\n    paddingHorizontal:50,\r\n    shadowColor: '#B3B3B3', \r\n    shadowOffset: { height: 2, width: 2 }, \r\n    shadowOpacity: 1, \r\n    shadowRadius: 1, \r\n    backgroundColor:'#FFCDD6',\r\n  },\r\n  inputContainer:{\r\n    flexDirection:'row',\r\n    alignItems:'center',\r\n    marginTop:20\r\n  },\r\n  inputImage:{\r\n    width:150,\r\n    height:150,\r\n    resizeMode:'contain',\r\n  },\r\n  inputText:{\r\n    fontFamily:'Inter-ExtraBold',\r\n    fontSize:36,\r\n    color:'#002B5B'\r\n  }\r\n})\r\n\r\n  // const handleSignout = () => {\r\n  //   auth\r\n  //   .signOut()\r\n  //   .then(() => {\r\n  //     navigation.replace(\"Login\")\r\n  //   })\r\n  //   .catch(error => alert(error.message))\r\n  // }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}